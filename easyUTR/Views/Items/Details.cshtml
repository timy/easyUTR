@model easyUTR.ViewModels.Items.ItemDetailViewModel
@{
    ViewData["Title"] = Model.Detail?.ItemName;
}


@using Microsoft.AspNetCore.Identity
@inject SignInManager<easyUTR.Areas.Identity.Data.AppUser> SignInManager
@inject UserManager<easyUTR.Areas.Identity.Data.AppUser> UserManager

<div class="container my-5">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Items")">Supermarket</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Detail?.ItemName</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-md-6">
            <img src="@Model.Detail?.ItemImage" alt="@Model.Detail?.ItemName" class="img-fluid rounded shadow-sm">
        </div>
        <div class="col-md-6">
            <h1 class="mb-3">@Model.Detail?.ItemName</h1>
            <p class="lead mb-4">@Model.Detail?.ItemDescription</p>
            <div class="mb-3">
                <span class="badge bg-primary">@Model.Detail?.CategoryName</span>
                <span class="badge bg-secondary">@Model.Detail?.SupplierName</span>
            </div>


            <div class="d-flex justify-content-between align-items-center">

                @if (User.IsInRole("Manager"))
                {
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Detail?.ItemId" class="btn btn-outline-secondary">Edit</a>
                        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                    </div>
                }
                <div>
                    <i class="bi bi-star-fill text-warning"></i>
                    <i class="bi bi-star-fill text-warning"></i>
                    <i class="bi bi-star-fill text-warning"></i>
                    <i class="bi bi-star-fill text-warning"></i>
                    <i class="bi bi-star-half text-warning"></i>
                    <span class="ms-2">(4.5)</span>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-md-8">
            <h3>Product Details</h3>
            <table class="table table-striped">
                <tbody>
                    <tr>
                        <th>Category</th>
                        <td>@Model.Detail?.CategoryName</td>
                    </tr>
                    <tr>
                        <th>Supplier</th>
                        <td>@Model.Detail?.SupplierName</td>
                    </tr>
                    <!-- Add more details as needed -->
                </tbody>
            </table>


            @if (Model.ItemStores?.Count > 0)
            {
                <h3>You can get this @Model.Detail?.ItemName from the following stores:</h3>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Store Name</th>
                            <th>Price</th>
                            @if (User.IsInRole("Customer"))
                            {
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var store in Model.ItemStores)
                        {
                            <tr>
                                <td>@store.StoreName</td>
                                <td>@store.Price</td>
                                @if (User.IsInRole("Customer"))
                                {
                                    <td>
                                        <form asp-action="AddToCart" method="post">
                                            <input type="hidden" name="storeId" value="@store.StoreId" />
                                            <input type="hidden" name="itemId" value="@Model.Detail?.ItemId" />

                                            <label for="ItemQuantity">Quantity:</label>
                                            <input type="number" id="ItemQuantity" name="ItemQuantity" value="1" step="1" min="1" max="20" />
                                            <button class="btn btn-primary mb-3">Add to Cart</button>

                                        </form>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <h3>Sorry, this item is not available.</h3>
            }
        </div>
        <div class="col-md-4">
            <h3>You might also like</h3>
            @if (Model.RelatedItems?.Count > 0)
            {
                foreach (var relatedItem in Model.RelatedItems)
                {
                    <div class="card mb-2">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-4">
                                    <img src="@relatedItem.ItemImage" alt="@relatedItem.ItemName" class="img-fluid rounded">
                                </div>
                                <div class="col-8">
                                    <h5 class="card-title">@relatedItem.ItemName</h5>
                                    <p class="card-text">@(relatedItem.ItemDescription?.Length > 50 ? relatedItem.ItemDescription.Substring(0, 47) + "..." : relatedItem.ItemDescription)</p>
                                    <a href="@Url.Action("Details", new { id = relatedItem.ItemId })" class="btn btn-sm btn-outline-primary">View</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No related items found.</p>
            }
        </div>
    </div>
</div>